// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __mlp_HLS_layer1Bias_H__
#define __mlp_HLS_layer1Bias_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct mlp_HLS_layer1Bias_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 112;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(mlp_HLS_layer1Bias_ram) {
        ram[0] = "0b10111101001110110101011010011010";
        ram[1] = "0b10111100001111001011111100000011";
        ram[2] = "0b00000000000000000000000000000000";
        ram[3] = "0b00111100010111010110110010101000";
        ram[4] = "0b10111100101111111010110001101101";
        ram[5] = "0b10111100010010001110011101101111";
        ram[6] = "0b10111100011111100100111011100111";
        ram[7] = "0b00000000000000000000000000000000";
        ram[8] = "0b10111100001011100011010000100101";
        ram[9] = "0b00111100111001011001101011100001";
        ram[10] = "0b00111100100000001111001011101101";
        ram[11] = "0b10111100000010010011100000000011";
        ram[12] = "0b00000000000000000000000000000000";
        ram[13] = "0b10111100001100001010000101101010";
        ram[14] = "0b10111100101010000000101001010000";
        ram[15] = "0b00000000000000000000000000000000";
        ram[16] = "0b00000000000000000000000000000000";
        ram[17] = "0b10111100111001110000111111010011";
        ram[18] = "0b00111100011011001100110001100110";
        ram[19] = "0b00000000000000000000000000000000";
        ram[20] = "0b00111100011010100010100110000011";
        ram[21] = "0b10111100100010000100010010000100";
        ram[22] = "0b10111011111011001110001110101010";
        ram[23] = "0b10111100000111111101111110010111";
        ram[24] = "0b00000000000000000000000000000000";
        ram[25] = "0b10111100000010000001011100101100";
        ram[26] = "0b10111100111111110010011000010101";
        ram[27] = "0b10111100000001111010111101001110";
        ram[28] = "0b10111001111101101111111011010110";
        ram[29] = "0b10111101000010110011100101110001";
        ram[30] = "0b00000000000000000000000000000000";
        ram[31] = "0b00000000000000000000000000000000";
        ram[32] = "0b10111100100000000010000110101010";
        ram[33] = "0b00111011100011100111000110000011";
        ram[34] = "0b10111101001001010000110010101100";
        ram[35] = "0b00000000000000000000000000000000";
        ram[36] = "0b00000000000000000000000000000000";
        ram[37] = "0b10111010110011011011001110010100";
        ram[38] = "0b00000000000000000000000000000000";
        ram[39] = "0b10111100010111000110000101010101";
        ram[40] = "0b00111011101100111011111011101100";
        ram[41] = "0b00000000000000000000000000000000";
        ram[42] = "0b00111100000011010110110111110011";
        ram[43] = "0b00000000000000000000000000000000";
        ram[44] = "0b00111100000111010010100011100000";
        ram[45] = "0b10111100000011001101110001110010";
        ram[46] = "0b00000000000000000000000000000000";
        ram[47] = "0b10111100001000111000111000101011";
        ram[48] = "0b10111100000000001100011110100001";
        ram[49] = "0b00000000000000000000000000000000";
        ram[50] = "0b00000000000000000000000000000000";
        ram[51] = "0b00000000000000000000000000000000";
        ram[52] = "0b00111100100011001001100010011101";
        ram[53] = "0b10111100110010001101110011111001";
        ram[54] = "0b10111101000101101111100010010010";
        ram[55] = "0b00000000000000000000000000000000";
        ram[56] = "0b10111100110111011111000111111111";
        ram[57] = "0b10111011010001111111000101001010";
        ram[58] = "0b10111101010100101000000010000011";
        ram[59] = "0b00000000000000000000000000000000";
        ram[60] = "0b10111100101001000111011110011010";
        ram[61] = "0b10111100010010010111000000110010";
        ram[62] = "0b10111100000001110011111000100100";
        ram[63] = "0b10111101000011001101111100001111";
        ram[64] = "0b10111101010100110011100010010111";
        ram[65] = "0b10111011111001100101001101001001";
        ram[66] = "0b00111100110000101110100110011100";
        ram[67] = "0b00000000000000000000000000000000";
        ram[68] = "0b10111100001010000010111011111101";
        ram[69] = "0b10111100110100101001100001110000";
        ram[70] = "0b10111100011011011100100010000010";
        ram[71] = "0b10111011101101000011111000111010";
        ram[72] = "0b10111101001011110011100100111000";
        ram[73] = "0b10111100101101101010000110110011";
        ram[74] = "0b00111011101010001101101110001110";
        ram[75] = "0b00000000000000000000000000000000";
        ram[76] = "0b10111100010010100001000011000010";
        ram[77] = "0b10111011110101110100111101011111";
        ram[78] = "0b10111100100101110010000010000100";
        ram[79] = "0b10111100101100100111001100101101";
        ram[80] = "0b00000000000000000000000000000000";
        ram[81] = "0b00111011001010001000101111100011";
        ram[82] = "0b10111100010111110010001000000011";
        ram[83] = "0b10111101000110011100110100000101";
        ram[84] = "0b00111100100001110010010000110101";
        ram[85] = "0b10111100001101100100001111000100";
        ram[86] = "0b10111000010100100101001111001100";
        ram[87] = "0b10111100110100001011110100000110";
        ram[88] = "0b10111011110001001011100101010100";
        ram[89] = "0b00111010111000011010010010000100";
        ram[90] = "0b00111100010100001111100000010001";
        ram[91] = "0b00111100011101010000110010000110";
        ram[92] = "0b10111011110111101001011010110000";
        ram[93] = "0b10111100100110110001000101101111";
        ram[94] = "0b00000000000000000000000000000000";
        ram[95] = "0b10111101000110110110110000101101";
        ram[96] = "0b10111100110110101000101010100001";
        ram[97] = "0b10111100001110011101001110101011";
        ram[98] = "0b00000000000000000000000000000000";
        ram[99] = "0b10111100100011010010100111010001";
        ram[100] = "0b00111011111010101001011010001010";
        ram[101] = "0b10111011001111010011101110011000";
        ram[102] = "0b10111101000010101011110111011100";
        ram[103] = "0b10111100110011111010000101101010";
        ram[104] = "0b10111011111011001101110000101111";
        ram[105] = "0b10111100011001100101011000011010";
        ram[106] = "0b00000000000000000000000000000000";
        ram[107] = "0b00000000000000000000000000000000";
        ram[108] = "0b00000000000000000000000000000000";
        ram[109] = "0b10111101000110111110101010000111";
        ram[110] = "0b10111100100001100100111101101001";
        ram[111] = "0b00111011110100001110111110101001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(mlp_HLS_layer1Bias) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 112;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


mlp_HLS_layer1Bias_ram* meminst;


SC_CTOR(mlp_HLS_layer1Bias) {
meminst = new mlp_HLS_layer1Bias_ram("mlp_HLS_layer1Bias_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~mlp_HLS_layer1Bias() {
    delete meminst;
}


};//endmodule
#endif
