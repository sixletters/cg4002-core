// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mlp_HLS.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mlp_HLS::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mlp_HLS::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<52> mlp_HLS::ap_ST_fsm_state1 = "1";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state2 = "10";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state3 = "100";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state4 = "1000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state5 = "10000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state6 = "100000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state7 = "1000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state8 = "10000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state9 = "100000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state10 = "1000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state11 = "10000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state12 = "100000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<52> mlp_HLS::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const bool mlp_HLS::ap_const_boolean_1 = true;
const sc_lv<32> mlp_HLS::ap_const_lv32_2 = "10";
const sc_lv<1> mlp_HLS::ap_const_lv1_0 = "0";
const sc_lv<32> mlp_HLS::ap_const_lv32_32 = "110010";
const sc_lv<32> mlp_HLS::ap_const_lv32_33 = "110011";
const sc_lv<32> mlp_HLS::ap_const_lv32_6 = "110";
const sc_lv<32> mlp_HLS::ap_const_lv32_A = "1010";
const sc_lv<32> mlp_HLS::ap_const_lv32_9 = "1001";
const sc_lv<32> mlp_HLS::ap_const_lv32_D = "1101";
const sc_lv<32> mlp_HLS::ap_const_lv32_19 = "11001";
const sc_lv<32> mlp_HLS::ap_const_lv32_1D = "11101";
const sc_lv<32> mlp_HLS::ap_const_lv32_28 = "101000";
const sc_lv<32> mlp_HLS::ap_const_lv32_2C = "101100";
const sc_lv<32> mlp_HLS::ap_const_lv32_11 = "10001";
const sc_lv<32> mlp_HLS::ap_const_lv32_21 = "100001";
const sc_lv<32> mlp_HLS::ap_const_lv32_30 = "110000";
const sc_lv<32> mlp_HLS::ap_const_lv32_16 = "10110";
const sc_lv<32> mlp_HLS::ap_const_lv32_1A = "11010";
const sc_lv<32> mlp_HLS::ap_const_lv32_25 = "100101";
const sc_lv<32> mlp_HLS::ap_const_lv32_29 = "101001";
const sc_lv<32> mlp_HLS::ap_const_lv32_1 = "1";
const sc_lv<32> mlp_HLS::ap_const_lv32_3 = "11";
const sc_lv<32> mlp_HLS::ap_const_lv32_4 = "100";
const sc_lv<32> mlp_HLS::ap_const_lv32_5 = "101";
const sc_lv<32> mlp_HLS::ap_const_lv32_7 = "111";
const sc_lv<32> mlp_HLS::ap_const_lv32_B = "1011";
const sc_lv<32> mlp_HLS::ap_const_lv32_13 = "10011";
const sc_lv<32> mlp_HLS::ap_const_lv32_14 = "10100";
const sc_lv<32> mlp_HLS::ap_const_lv32_15 = "10101";
const sc_lv<32> mlp_HLS::ap_const_lv32_23 = "100011";
const sc_lv<32> mlp_HLS::ap_const_lv32_24 = "100100";
const sc_lv<32> mlp_HLS::ap_const_lv32_31 = "110001";
const sc_lv<2> mlp_HLS::ap_const_lv2_0 = "00";
const sc_lv<32> mlp_HLS::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<6> mlp_HLS::ap_const_lv6_0 = "000000";
const sc_lv<1> mlp_HLS::ap_const_lv1_1 = "1";
const sc_lv<32> mlp_HLS::ap_const_lv32_12 = "10010";
const sc_lv<7> mlp_HLS::ap_const_lv7_0 = "0000000";
const sc_lv<13> mlp_HLS::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> mlp_HLS::ap_const_lv32_22 = "100010";
const sc_lv<3> mlp_HLS::ap_const_lv3_0 = "000";
const sc_lv<2> mlp_HLS::ap_const_lv2_1 = "1";
const sc_lv<2> mlp_HLS::ap_const_lv2_2 = "10";
const sc_lv<2> mlp_HLS::ap_const_lv2_3 = "11";
const sc_lv<32> mlp_HLS::ap_const_lv32_E = "1110";
const sc_lv<32> mlp_HLS::ap_const_lv32_1E = "11110";
const sc_lv<32> mlp_HLS::ap_const_lv32_2D = "101101";
const sc_lv<32> mlp_HLS::ap_const_lv32_17 = "10111";
const sc_lv<32> mlp_HLS::ap_const_lv32_1B = "11011";
const sc_lv<32> mlp_HLS::ap_const_lv32_26 = "100110";
const sc_lv<32> mlp_HLS::ap_const_lv32_2A = "101010";
const sc_lv<6> mlp_HLS::ap_const_lv6_36 = "110110";
const sc_lv<6> mlp_HLS::ap_const_lv6_1 = "1";
const sc_lv<13> mlp_HLS::ap_const_lv13_36 = "110110";
const sc_lv<7> mlp_HLS::ap_const_lv7_70 = "1110000";
const sc_lv<7> mlp_HLS::ap_const_lv7_1 = "1";
const sc_lv<6> mlp_HLS::ap_const_lv6_2 = "10";
const sc_lv<8> mlp_HLS::ap_const_lv8_FF = "11111111";
const sc_lv<23> mlp_HLS::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<4> mlp_HLS::ap_const_lv4_0 = "0000";
const sc_lv<7> mlp_HLS::ap_const_lv7_2 = "10";
const sc_lv<3> mlp_HLS::ap_const_lv3_4 = "100";
const sc_lv<3> mlp_HLS::ap_const_lv3_1 = "1";
const sc_lv<32> mlp_HLS::ap_const_lv32_3CD1708C = "111100110100010111000010001100";
const sc_lv<32> mlp_HLS::ap_const_lv32_3A2F9043 = "111010001011111001000001000011";
const sc_lv<32> mlp_HLS::ap_const_lv32_BC219C6E = "10111100001000011001110001101110";
const sc_lv<32> mlp_HLS::ap_const_lv32_BCA1D39C = "10111100101000011101001110011100";
const sc_lv<3> mlp_HLS::ap_const_lv3_3 = "11";
const sc_lv<5> mlp_HLS::ap_const_lv5_4 = "100";

mlp_HLS::mlp_HLS(sc_module_name name) : sc_module(name), mVcdFile(0) {
    layer1Bias_U = new mlp_HLS_layer1Bias("layer1Bias_U");
    layer1Bias_U->clk(ap_clk);
    layer1Bias_U->reset(ap_rst_n_inv);
    layer1Bias_U->address0(layer1Bias_address0);
    layer1Bias_U->ce0(layer1Bias_ce0);
    layer1Bias_U->q0(layer1Bias_q0);
    layer1Weight_U = new mlp_HLS_layer1Weibkb("layer1Weight_U");
    layer1Weight_U->clk(ap_clk);
    layer1Weight_U->reset(ap_rst_n_inv);
    layer1Weight_U->address0(layer1Weight_address0);
    layer1Weight_U->ce0(layer1Weight_ce0);
    layer1Weight_U->q0(layer1Weight_q0);
    layer2Bias_U = new mlp_HLS_layer2Bias("layer2Bias_U");
    layer2Bias_U->clk(ap_clk);
    layer2Bias_U->reset(ap_rst_n_inv);
    layer2Bias_U->address0(layer2Bias_address0);
    layer2Bias_U->ce0(layer2Bias_ce0);
    layer2Bias_U->q0(layer2Bias_q0);
    layer2Weight_U = new mlp_HLS_layer2Weicud("layer2Weight_U");
    layer2Weight_U->clk(ap_clk);
    layer2Weight_U->reset(ap_rst_n_inv);
    layer2Weight_U->address0(layer2Weight_address0);
    layer2Weight_U->ce0(layer2Weight_ce0);
    layer2Weight_U->q0(layer2Weight_q0);
    outputWeight_U = new mlp_HLS_outputWeidEe("outputWeight_U");
    outputWeight_U->clk(ap_clk);
    outputWeight_U->reset(ap_rst_n_inv);
    outputWeight_U->address0(outputWeight_address0);
    outputWeight_U->ce0(outputWeight_ce0);
    outputWeight_U->q0(outputWeight_q0);
    training_input_U = new mlp_HLS_training_eOg("training_input_U");
    training_input_U->clk(ap_clk);
    training_input_U->reset(ap_rst_n_inv);
    training_input_U->address0(training_input_address0);
    training_input_U->ce0(training_input_ce0);
    training_input_U->we0(training_input_we0);
    training_input_U->d0(S_AXIS_TDATA_int);
    training_input_U->q0(training_input_q0);
    hidden1Layer_U = new mlp_HLS_hidden1LafYi("hidden1Layer_U");
    hidden1Layer_U->clk(ap_clk);
    hidden1Layer_U->reset(ap_rst_n_inv);
    hidden1Layer_U->address0(hidden1Layer_address0);
    hidden1Layer_U->ce0(hidden1Layer_ce0);
    hidden1Layer_U->we0(hidden1Layer_we0);
    hidden1Layer_U->d0(hidden1Layer_d0);
    hidden1Layer_U->q0(hidden1Layer_q0);
    hidden2Layer_U = new mlp_HLS_hidden1LafYi("hidden2Layer_U");
    hidden2Layer_U->clk(ap_clk);
    hidden2Layer_U->reset(ap_rst_n_inv);
    hidden2Layer_U->address0(hidden2Layer_address0);
    hidden2Layer_U->ce0(hidden2Layer_ce0);
    hidden2Layer_U->we0(hidden2Layer_we0);
    hidden2Layer_U->d0(hidden2Layer_d0);
    hidden2Layer_U->q0(hidden2Layer_q0);
    mlp_HLS_fadd_32nshbi_U1 = new mlp_HLS_fadd_32nshbi<1,4,32,32,32>("mlp_HLS_fadd_32nshbi_U1");
    mlp_HLS_fadd_32nshbi_U1->clk(ap_clk);
    mlp_HLS_fadd_32nshbi_U1->reset(ap_rst_n_inv);
    mlp_HLS_fadd_32nshbi_U1->din0(grp_fu_533_p0);
    mlp_HLS_fadd_32nshbi_U1->din1(reg_560);
    mlp_HLS_fadd_32nshbi_U1->ce(ap_var_for_const0);
    mlp_HLS_fadd_32nshbi_U1->dout(grp_fu_533_p2);
    mlp_HLS_fmul_32nsibs_U2 = new mlp_HLS_fmul_32nsibs<1,3,32,32,32>("mlp_HLS_fmul_32nsibs_U2");
    mlp_HLS_fmul_32nsibs_U2->clk(ap_clk);
    mlp_HLS_fmul_32nsibs_U2->reset(ap_rst_n_inv);
    mlp_HLS_fmul_32nsibs_U2->din0(grp_fu_540_p0);
    mlp_HLS_fmul_32nsibs_U2->din1(grp_fu_540_p1);
    mlp_HLS_fmul_32nsibs_U2->ce(ap_var_for_const0);
    mlp_HLS_fmul_32nsibs_U2->dout(grp_fu_540_p2);
    mlp_HLS_fcmp_32nsjbC_U3 = new mlp_HLS_fcmp_32nsjbC<1,2,32,32,1>("mlp_HLS_fcmp_32nsjbC_U3");
    mlp_HLS_fcmp_32nsjbC_U3->clk(ap_clk);
    mlp_HLS_fcmp_32nsjbC_U3->reset(ap_rst_n_inv);
    mlp_HLS_fcmp_32nsjbC_U3->din0(grp_fu_544_p0);
    mlp_HLS_fcmp_32nsjbC_U3->din1(ap_var_for_const1);
    mlp_HLS_fcmp_32nsjbC_U3->ce(ap_var_for_const0);
    mlp_HLS_fcmp_32nsjbC_U3->opcode(ap_var_for_const2);
    mlp_HLS_fcmp_32nsjbC_U3->dout(grp_fu_544_p2);
    mlp_HLS_mux_42_32kbM_U4 = new mlp_HLS_mux_42_32kbM<1,1,32,32,32,32,2,32>("mlp_HLS_mux_42_32kbM_U4");
    mlp_HLS_mux_42_32kbM_U4->din0(ap_var_for_const3);
    mlp_HLS_mux_42_32kbM_U4->din1(ap_var_for_const4);
    mlp_HLS_mux_42_32kbM_U4->din2(ap_var_for_const5);
    mlp_HLS_mux_42_32kbM_U4->din3(ap_var_for_const6);
    mlp_HLS_mux_42_32kbM_U4->din4(activation_2_fu_1091_p5);
    mlp_HLS_mux_42_32kbM_U4->dout(activation_2_fu_1091_p6);
    mlp_HLS_mux_42_32kbM_U5 = new mlp_HLS_mux_42_32kbM<1,1,32,32,32,32,2,32>("mlp_HLS_mux_42_32kbM_U5");
    mlp_HLS_mux_42_32kbM_U5->din0(outputLayer_3_fu_160);
    mlp_HLS_mux_42_32kbM_U5->din1(outputLayer_3_1_fu_164);
    mlp_HLS_mux_42_32kbM_U5->din2(outputLayer_3_2_fu_168);
    mlp_HLS_mux_42_32kbM_U5->din3(outputLayer_3_3_fu_172);
    mlp_HLS_mux_42_32kbM_U5->din4(tmp_8_fu_1225_p5);
    mlp_HLS_mux_42_32kbM_U5->dout(tmp_8_fu_1225_p6);
    mlp_HLS_mux_42_32kbM_U6 = new mlp_HLS_mux_42_32kbM<1,1,32,32,32,32,2,32>("mlp_HLS_mux_42_32kbM_U6");
    mlp_HLS_mux_42_32kbM_U6->din0(output_3_fu_176);
    mlp_HLS_mux_42_32kbM_U6->din1(output_3_1_fu_180);
    mlp_HLS_mux_42_32kbM_U6->din2(output_3_3_fu_184);
    mlp_HLS_mux_42_32kbM_U6->din3(output_3_2_fu_188);
    mlp_HLS_mux_42_32kbM_U6->din4(write_output_data_fu_1291_p5);
    mlp_HLS_mux_42_32kbM_U6->dout(write_output_data_fu_1291_p6);
    regslice_both_S_AXIS_V_data_U = new regslice_both<32>("regslice_both_S_AXIS_V_data_U");
    regslice_both_S_AXIS_V_data_U->ap_clk(ap_clk);
    regslice_both_S_AXIS_V_data_U->ap_rst(ap_rst_n_inv);
    regslice_both_S_AXIS_V_data_U->data_in(S_AXIS_TDATA);
    regslice_both_S_AXIS_V_data_U->vld_in(S_AXIS_TVALID);
    regslice_both_S_AXIS_V_data_U->ack_in(regslice_both_S_AXIS_V_data_U_ack_in);
    regslice_both_S_AXIS_V_data_U->data_out(S_AXIS_TDATA_int);
    regslice_both_S_AXIS_V_data_U->vld_out(S_AXIS_TVALID_int);
    regslice_both_S_AXIS_V_data_U->ack_out(S_AXIS_TREADY_int);
    regslice_both_S_AXIS_V_data_U->apdone_blk(regslice_both_S_AXIS_V_data_U_apdone_blk);
    regslice_both_w1_S_AXIS_V_last_U = new regslice_both_w1<1>("regslice_both_w1_S_AXIS_V_last_U");
    regslice_both_w1_S_AXIS_V_last_U->ap_clk(ap_clk);
    regslice_both_w1_S_AXIS_V_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_S_AXIS_V_last_U->data_in(S_AXIS_TLAST);
    regslice_both_w1_S_AXIS_V_last_U->vld_in(S_AXIS_TVALID);
    regslice_both_w1_S_AXIS_V_last_U->ack_in(regslice_both_w1_S_AXIS_V_last_U_ack_in);
    regslice_both_w1_S_AXIS_V_last_U->data_out(S_AXIS_TLAST_int);
    regslice_both_w1_S_AXIS_V_last_U->vld_out(regslice_both_w1_S_AXIS_V_last_U_vld_out);
    regslice_both_w1_S_AXIS_V_last_U->ack_out(S_AXIS_TREADY_int);
    regslice_both_w1_S_AXIS_V_last_U->apdone_blk(regslice_both_w1_S_AXIS_V_last_U_apdone_blk);
    regslice_both_M_AXIS_V_data_U = new regslice_both<32>("regslice_both_M_AXIS_V_data_U");
    regslice_both_M_AXIS_V_data_U->ap_clk(ap_clk);
    regslice_both_M_AXIS_V_data_U->ap_rst(ap_rst_n_inv);
    regslice_both_M_AXIS_V_data_U->data_in(write_output_data_fu_1291_p6);
    regslice_both_M_AXIS_V_data_U->vld_in(M_AXIS_TVALID_int);
    regslice_both_M_AXIS_V_data_U->ack_in(M_AXIS_TREADY_int);
    regslice_both_M_AXIS_V_data_U->data_out(M_AXIS_TDATA);
    regslice_both_M_AXIS_V_data_U->vld_out(regslice_both_M_AXIS_V_data_U_vld_out);
    regslice_both_M_AXIS_V_data_U->ack_out(M_AXIS_TREADY);
    regslice_both_M_AXIS_V_data_U->apdone_blk(regslice_both_M_AXIS_V_data_U_apdone_blk);
    regslice_both_w1_M_AXIS_V_last_U = new regslice_both_w1<1>("regslice_both_w1_M_AXIS_V_last_U");
    regslice_both_w1_M_AXIS_V_last_U->ap_clk(ap_clk);
    regslice_both_w1_M_AXIS_V_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_M_AXIS_V_last_U->data_in(M_AXIS_TLAST_int);
    regslice_both_w1_M_AXIS_V_last_U->vld_in(M_AXIS_TVALID_int);
    regslice_both_w1_M_AXIS_V_last_U->ack_in(regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy);
    regslice_both_w1_M_AXIS_V_last_U->data_out(M_AXIS_TLAST);
    regslice_both_w1_M_AXIS_V_last_U->vld_out(regslice_both_w1_M_AXIS_V_last_U_vld_out);
    regslice_both_w1_M_AXIS_V_last_U->ack_out(M_AXIS_TREADY);
    regslice_both_w1_M_AXIS_V_last_U->apdone_blk(regslice_both_w1_M_AXIS_V_last_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_M_AXIS_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_ln138_fu_1263_p2 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( M_AXIS_TREADY_int );

    SC_METHOD(thread_M_AXIS_TLAST_int);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_ln138_fu_1263_p2 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( i8_0_reg_522 );

    SC_METHOD(thread_M_AXIS_TVALID);
    sensitive << ( regslice_both_M_AXIS_V_data_U_vld_out );

    SC_METHOD(thread_M_AXIS_TVALID_int);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_ln138_fu_1263_p2 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( ap_block_state51_io );

    SC_METHOD(thread_S_AXIS_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_S_AXIS_TREADY);
    sensitive << ( S_AXIS_TVALID );
    sensitive << ( regslice_both_S_AXIS_V_data_U_ack_in );

    SC_METHOD(thread_S_AXIS_TREADY_int);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_activation_2_fu_1091_p5);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_add_ln100_1_fu_982_p2);
    sensitive << ( sub_ln100_reg_1481 );
    sensitive << ( zext_ln100_5_fu_978_p1 );

    SC_METHOD(thread_add_ln100_fu_957_p2);
    sensitive << ( sub_ln100_reg_1481 );
    sensitive << ( zext_ln100_4_fu_953_p1 );

    SC_METHOD(thread_add_ln125_fu_1191_p2);
    sensitive << ( k6_0_0_reg_499 );

    SC_METHOD(thread_add_ln127_1_fu_1181_p2);
    sensitive << ( sub_ln127_reg_1528 );
    sensitive << ( zext_ln127_4_fu_1177_p1 );

    SC_METHOD(thread_add_ln127_fu_1136_p2);
    sensitive << ( sub_ln127_reg_1528 );
    sensitive << ( zext_ln127_3_fu_1132_p1 );

    SC_METHOD(thread_add_ln57_fu_609_p2);
    sensitive << ( phi_ln57_reg_377 );

    SC_METHOD(thread_add_ln79_fu_753_p2);
    sensitive << ( phi_mul_reg_410 );

    SC_METHOD(thread_add_ln81_fu_833_p2);
    sensitive << ( k_0_0_reg_432 );

    SC_METHOD(thread_add_ln85_1_fu_822_p2);
    sensitive << ( phi_mul_reg_410 );
    sensitive << ( zext_ln85_2_fu_818_p1 );

    SC_METHOD(thread_add_ln85_fu_791_p2);
    sensitive << ( phi_mul_reg_410 );
    sensitive << ( zext_ln85_fu_787_p1 );

    SC_METHOD(thread_add_ln98_fu_992_p2);
    sensitive << ( k3_0_0_reg_466 );

    SC_METHOD(thread_and_ln102_fu_1034_p2);
    sensitive << ( grp_fu_544_p2 );
    sensitive << ( or_ln102_fu_1028_p2 );

    SC_METHOD(thread_and_ln88_fu_880_p2);
    sensitive << ( or_ln88_fu_874_p2 );
    sensitive << ( grp_fu_544_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_ap_block_state51_io);
    sensitive << ( icmp_ln138_fu_1263_p2 );
    sensitive << ( M_AXIS_TREADY_int );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln102_fu_998_p1);
    sensitive << ( activation2_0_0_reg_456 );

    SC_METHOD(thread_bitcast_ln85_1_fu_839_p1);
    sensitive << ( reg_551 );

    SC_METHOD(thread_bitcast_ln85_fu_802_p1);
    sensitive << ( reg_551 );

    SC_METHOD(thread_bitcast_ln88_fu_844_p1);
    sensitive << ( activation_0_0_reg_422 );

    SC_METHOD(thread_grp_fu_533_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_565 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( activation_0_0_reg_422 );
    sensitive << ( activation2_0_0_reg_456 );
    sensitive << ( outputLayer_0_reg_489 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_grp_fu_540_p0);
    sensitive << ( reg_577 );
    sensitive << ( reg_587 );
    sensitive << ( bitcast_ln85_fu_802_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( bitcast_ln85_1_fu_839_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_540_p1);
    sensitive << ( reg_555 );
    sensitive << ( reg_582 );
    sensitive << ( reg_592 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_544_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( activation_0_0_reg_422 );
    sensitive << ( activation2_0_0_reg_456 );

    SC_METHOD(thread_hidden1Layer_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( zext_ln80_reg_1386 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln100_fu_948_p1 );
    sensitive << ( zext_ln100_1_fu_973_p1 );

    SC_METHOD(thread_hidden1Layer_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_hidden1Layer_d0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( activation_0_0_reg_422 );
    sensitive << ( and_ln88_fu_880_p2 );

    SC_METHOD(thread_hidden1Layer_we0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_hidden2Layer_address0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( zext_ln97_reg_1447 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( zext_ln127_fu_1127_p1 );
    sensitive << ( zext_ln127_1_fu_1172_p1 );

    SC_METHOD(thread_hidden2Layer_ce0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_hidden2Layer_d0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( activation2_0_0_reg_456 );
    sensitive << ( and_ln102_fu_1034_p2 );

    SC_METHOD(thread_hidden2Layer_we0);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_i_2_fu_1203_p2);
    sensitive << ( i7_0_reg_511 );

    SC_METHOD(thread_i_3_fu_1269_p2);
    sensitive << ( i8_0_reg_522 );

    SC_METHOD(thread_i_fu_737_p2);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_icmp_ln102_1_fu_1022_p2);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( trunc_ln102_fu_1012_p1 );

    SC_METHOD(thread_icmp_ln102_fu_1016_p2);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( tmp_4_fu_1002_p4 );

    SC_METHOD(thread_icmp_ln123_fu_1049_p2);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_icmp_ln125_fu_1121_p2);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( k6_0_0_reg_499 );

    SC_METHOD(thread_icmp_ln132_fu_1197_p2);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( i7_0_reg_511 );

    SC_METHOD(thread_icmp_ln138_fu_1263_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( ap_block_state51_io );
    sensitive << ( i8_0_reg_522 );

    SC_METHOD(thread_icmp_ln57_1_fu_615_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln57_reg_377 );

    SC_METHOD(thread_icmp_ln57_2_fu_629_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln57_reg_377 );

    SC_METHOD(thread_icmp_ln57_3_fu_643_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln57_reg_377 );

    SC_METHOD(thread_icmp_ln57_fu_705_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln57_reg_377 );

    SC_METHOD(thread_icmp_ln60_fu_731_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( i_0_reg_388 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_icmp_ln79_fu_759_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_reg_399 );

    SC_METHOD(thread_icmp_ln81_fu_776_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_0_0_reg_432 );

    SC_METHOD(thread_icmp_ln88_1_fu_868_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( trunc_ln88_fu_858_p1 );

    SC_METHOD(thread_icmp_ln88_fu_862_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_fu_848_p4 );

    SC_METHOD(thread_icmp_ln96_fu_895_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( j1_0_reg_444 );

    SC_METHOD(thread_icmp_ln98_fu_942_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( k3_0_0_reg_466 );

    SC_METHOD(thread_j_1_fu_1055_p2);
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_j_2_fu_901_p2);
    sensitive << ( j1_0_reg_444 );

    SC_METHOD(thread_j_fu_765_p2);
    sensitive << ( j_0_reg_399 );

    SC_METHOD(thread_layer1Bias_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln80_fu_771_p1 );

    SC_METHOD(thread_layer1Bias_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_layer1Weight_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln85_1_fu_797_p1 );
    sensitive << ( zext_ln85_3_fu_828_p1 );

    SC_METHOD(thread_layer1Weight_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_layer2Bias_address0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln97_fu_907_p1 );

    SC_METHOD(thread_layer2Bias_ce0);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_layer2Weight_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( sext_ln100_fu_962_p1 );
    sensitive << ( sext_ln100_1_fu_987_p1 );

    SC_METHOD(thread_layer2Weight_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_or_ln102_fu_1028_p2);
    sensitive << ( icmp_ln102_1_fu_1022_p2 );
    sensitive << ( icmp_ln102_fu_1016_p2 );

    SC_METHOD(thread_or_ln125_fu_1166_p2);
    sensitive << ( k6_0_0_reg_499 );

    SC_METHOD(thread_or_ln81_fu_807_p2);
    sensitive << ( k_0_0_reg_432 );

    SC_METHOD(thread_or_ln88_fu_874_p2);
    sensitive << ( icmp_ln88_1_fu_868_p2 );
    sensitive << ( icmp_ln88_fu_862_p2 );

    SC_METHOD(thread_or_ln98_fu_967_p2);
    sensitive << ( k3_0_0_reg_466 );

    SC_METHOD(thread_outputWeight_address0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( sext_ln127_fu_1141_p1 );
    sensitive << ( sext_ln127_1_fu_1186_p1 );

    SC_METHOD(thread_outputWeight_ce0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_output_0_fu_1239_p1);
    sensitive << ( tmp_8_fu_1225_p6 );

    SC_METHOD(thread_select_ln57_1_fu_635_p3);
    sensitive << ( output_3_0_fu_144 );
    sensitive << ( icmp_ln57_2_fu_629_p2 );
    sensitive << ( select_ln57_fu_621_p3 );

    SC_METHOD(thread_select_ln57_2_fu_649_p3);
    sensitive << ( output_3_0_fu_144 );
    sensitive << ( icmp_ln57_3_fu_643_p2 );
    sensitive << ( select_ln57_1_fu_635_p3 );

    SC_METHOD(thread_select_ln57_3_fu_657_p3);
    sensitive << ( output_2_0_fu_140 );
    sensitive << ( icmp_ln57_1_fu_615_p2 );

    SC_METHOD(thread_select_ln57_4_fu_665_p3);
    sensitive << ( output_2_0_fu_140 );
    sensitive << ( icmp_ln57_2_fu_629_p2 );
    sensitive << ( select_ln57_3_fu_657_p3 );

    SC_METHOD(thread_select_ln57_5_fu_673_p3);
    sensitive << ( output_2_0_fu_140 );
    sensitive << ( icmp_ln57_3_fu_643_p2 );
    sensitive << ( select_ln57_4_fu_665_p3 );

    SC_METHOD(thread_select_ln57_6_fu_681_p3);
    sensitive << ( output_1_0_fu_136 );
    sensitive << ( icmp_ln57_2_fu_629_p2 );

    SC_METHOD(thread_select_ln57_7_fu_689_p3);
    sensitive << ( output_1_0_fu_136 );
    sensitive << ( icmp_ln57_3_fu_643_p2 );
    sensitive << ( select_ln57_6_fu_681_p3 );

    SC_METHOD(thread_select_ln57_8_fu_697_p3);
    sensitive << ( output_0_0_fu_132 );
    sensitive << ( icmp_ln57_3_fu_643_p2 );

    SC_METHOD(thread_select_ln57_fu_621_p3);
    sensitive << ( output_3_0_fu_144 );
    sensitive << ( icmp_ln57_1_fu_615_p2 );

    SC_METHOD(thread_sext_ln100_1_fu_987_p1);
    sensitive << ( add_ln100_1_fu_982_p2 );

    SC_METHOD(thread_sext_ln100_fu_962_p1);
    sensitive << ( add_ln100_fu_957_p2 );

    SC_METHOD(thread_sext_ln127_1_fu_1186_p1);
    sensitive << ( add_ln127_1_fu_1181_p2 );

    SC_METHOD(thread_sext_ln127_fu_1141_p1);
    sensitive << ( add_ln127_fu_1136_p2 );

    SC_METHOD(thread_sub_ln100_fu_936_p2);
    sensitive << ( zext_ln100_2_fu_920_p1 );
    sensitive << ( zext_ln100_3_fu_932_p1 );

    SC_METHOD(thread_sub_ln127_fu_1081_p2);
    sensitive << ( tmp_s_fu_1061_p3 );
    sensitive << ( zext_ln127_2_fu_1077_p1 );

    SC_METHOD(thread_tmp_10_fu_1069_p3);
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_tmp_3_fu_912_p3);
    sensitive << ( j1_0_reg_444 );

    SC_METHOD(thread_tmp_4_fu_1002_p4);
    sensitive << ( bitcast_ln102_fu_998_p1 );

    SC_METHOD(thread_tmp_8_fu_1225_p5);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( i7_0_reg_511 );

    SC_METHOD(thread_tmp_9_fu_924_p3);
    sensitive << ( j1_0_reg_444 );

    SC_METHOD(thread_tmp_fu_848_p4);
    sensitive << ( bitcast_ln88_fu_844_p1 );

    SC_METHOD(thread_tmp_s_fu_1061_p3);
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_training_input_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln62_fu_748_p1 );
    sensitive << ( zext_ln84_fu_782_p1 );
    sensitive << ( zext_ln84_1_fu_813_p1 );

    SC_METHOD(thread_training_input_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_training_input_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( S_AXIS_TVALID_int );

    SC_METHOD(thread_trunc_ln102_fu_1012_p1);
    sensitive << ( bitcast_ln102_fu_998_p1 );

    SC_METHOD(thread_trunc_ln124_fu_1087_p1);
    sensitive << ( j4_0_reg_478 );

    SC_METHOD(thread_trunc_ln134_fu_1221_p1);
    sensitive << ( i7_0_reg_511 );

    SC_METHOD(thread_trunc_ln88_fu_858_p1);
    sensitive << ( bitcast_ln88_fu_844_p1 );

    SC_METHOD(thread_write_output_data_fu_1291_p5);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( i8_0_reg_522 );

    SC_METHOD(thread_zext_ln100_1_fu_973_p1);
    sensitive << ( or_ln98_fu_967_p2 );

    SC_METHOD(thread_zext_ln100_2_fu_920_p1);
    sensitive << ( tmp_3_fu_912_p3 );

    SC_METHOD(thread_zext_ln100_3_fu_932_p1);
    sensitive << ( tmp_9_fu_924_p3 );

    SC_METHOD(thread_zext_ln100_4_fu_953_p1);
    sensitive << ( k3_0_0_reg_466 );

    SC_METHOD(thread_zext_ln100_5_fu_978_p1);
    sensitive << ( or_ln98_fu_967_p2 );

    SC_METHOD(thread_zext_ln100_fu_948_p1);
    sensitive << ( k3_0_0_reg_466 );

    SC_METHOD(thread_zext_ln127_1_fu_1172_p1);
    sensitive << ( or_ln125_fu_1166_p2 );

    SC_METHOD(thread_zext_ln127_2_fu_1077_p1);
    sensitive << ( tmp_10_fu_1069_p3 );

    SC_METHOD(thread_zext_ln127_3_fu_1132_p1);
    sensitive << ( k6_0_0_reg_499 );

    SC_METHOD(thread_zext_ln127_4_fu_1177_p1);
    sensitive << ( or_ln125_fu_1166_p2 );

    SC_METHOD(thread_zext_ln127_fu_1127_p1);
    sensitive << ( k6_0_0_reg_499 );

    SC_METHOD(thread_zext_ln62_fu_748_p1);
    sensitive << ( i_0_reg_388 );

    SC_METHOD(thread_zext_ln80_fu_771_p1);
    sensitive << ( j_0_reg_399 );

    SC_METHOD(thread_zext_ln84_1_fu_813_p1);
    sensitive << ( or_ln81_fu_807_p2 );

    SC_METHOD(thread_zext_ln84_fu_782_p1);
    sensitive << ( k_0_0_reg_432 );

    SC_METHOD(thread_zext_ln85_1_fu_797_p1);
    sensitive << ( add_ln85_fu_791_p2 );

    SC_METHOD(thread_zext_ln85_2_fu_818_p1);
    sensitive << ( or_ln81_fu_807_p2 );

    SC_METHOD(thread_zext_ln85_3_fu_828_p1);
    sensitive << ( add_ln85_1_fu_822_p2 );

    SC_METHOD(thread_zext_ln85_fu_787_p1);
    sensitive << ( k_0_0_reg_432 );

    SC_METHOD(thread_zext_ln97_fu_907_p1);
    sensitive << ( j1_0_reg_444 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln60_fu_731_p2 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( icmp_ln138_fu_1263_p2 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln79_fu_759_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln81_fu_776_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( icmp_ln96_fu_895_p2 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln98_fu_942_p2 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( icmp_ln123_fu_1049_p2 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( icmp_ln125_fu_1121_p2 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( regslice_both_M_AXIS_V_data_U_apdone_blk );
    sensitive << ( ap_block_state51_io );
    sensitive << ( icmp_ln57_fu_705_p2 );
    sensitive << ( icmp_ln132_fu_1197_p2 );
    sensitive << ( S_AXIS_TVALID_int );
    sensitive << ( M_AXIS_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mlp_HLS_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, S_AXIS_TDATA, "(port)S_AXIS_TDATA");
    sc_trace(mVcdFile, S_AXIS_TVALID, "(port)S_AXIS_TVALID");
    sc_trace(mVcdFile, S_AXIS_TREADY, "(port)S_AXIS_TREADY");
    sc_trace(mVcdFile, S_AXIS_TLAST, "(port)S_AXIS_TLAST");
    sc_trace(mVcdFile, M_AXIS_TDATA, "(port)M_AXIS_TDATA");
    sc_trace(mVcdFile, M_AXIS_TVALID, "(port)M_AXIS_TVALID");
    sc_trace(mVcdFile, M_AXIS_TREADY, "(port)M_AXIS_TREADY");
    sc_trace(mVcdFile, M_AXIS_TLAST, "(port)M_AXIS_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, layer1Bias_address0, "layer1Bias_address0");
    sc_trace(mVcdFile, layer1Bias_ce0, "layer1Bias_ce0");
    sc_trace(mVcdFile, layer1Bias_q0, "layer1Bias_q0");
    sc_trace(mVcdFile, layer1Weight_address0, "layer1Weight_address0");
    sc_trace(mVcdFile, layer1Weight_ce0, "layer1Weight_ce0");
    sc_trace(mVcdFile, layer1Weight_q0, "layer1Weight_q0");
    sc_trace(mVcdFile, layer2Bias_address0, "layer2Bias_address0");
    sc_trace(mVcdFile, layer2Bias_ce0, "layer2Bias_ce0");
    sc_trace(mVcdFile, layer2Bias_q0, "layer2Bias_q0");
    sc_trace(mVcdFile, layer2Weight_address0, "layer2Weight_address0");
    sc_trace(mVcdFile, layer2Weight_ce0, "layer2Weight_ce0");
    sc_trace(mVcdFile, layer2Weight_q0, "layer2Weight_q0");
    sc_trace(mVcdFile, outputWeight_address0, "outputWeight_address0");
    sc_trace(mVcdFile, outputWeight_ce0, "outputWeight_ce0");
    sc_trace(mVcdFile, outputWeight_q0, "outputWeight_q0");
    sc_trace(mVcdFile, S_AXIS_TDATA_blk_n, "S_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln60_fu_731_p2, "icmp_ln60_fu_731_p2");
    sc_trace(mVcdFile, M_AXIS_TDATA_blk_n, "M_AXIS_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, icmp_ln138_fu_1263_p2, "icmp_ln138_fu_1263_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, training_input_q0, "training_input_q0");
    sc_trace(mVcdFile, reg_551, "reg_551");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, reg_555, "reg_555");
    sc_trace(mVcdFile, grp_fu_540_p2, "grp_fu_540_p2");
    sc_trace(mVcdFile, reg_560, "reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, grp_fu_533_p2, "grp_fu_533_p2");
    sc_trace(mVcdFile, reg_565, "reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, hidden1Layer_q0, "hidden1Layer_q0");
    sc_trace(mVcdFile, reg_577, "reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, reg_582, "reg_582");
    sc_trace(mVcdFile, hidden2Layer_q0, "hidden2Layer_q0");
    sc_trace(mVcdFile, reg_587, "reg_587");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, reg_592, "reg_592");
    sc_trace(mVcdFile, add_ln57_fu_609_p2, "add_ln57_fu_609_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, select_ln57_2_fu_649_p3, "select_ln57_2_fu_649_p3");
    sc_trace(mVcdFile, select_ln57_2_reg_1342, "select_ln57_2_reg_1342");
    sc_trace(mVcdFile, select_ln57_5_fu_673_p3, "select_ln57_5_fu_673_p3");
    sc_trace(mVcdFile, select_ln57_5_reg_1347, "select_ln57_5_reg_1347");
    sc_trace(mVcdFile, select_ln57_7_fu_689_p3, "select_ln57_7_fu_689_p3");
    sc_trace(mVcdFile, select_ln57_7_reg_1352, "select_ln57_7_reg_1352");
    sc_trace(mVcdFile, select_ln57_8_fu_697_p3, "select_ln57_8_fu_697_p3");
    sc_trace(mVcdFile, select_ln57_8_reg_1357, "select_ln57_8_reg_1357");
    sc_trace(mVcdFile, i_fu_737_p2, "i_fu_737_p2");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, add_ln79_fu_753_p2, "add_ln79_fu_753_p2");
    sc_trace(mVcdFile, add_ln79_reg_1373, "add_ln79_reg_1373");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_fu_765_p2, "j_fu_765_p2");
    sc_trace(mVcdFile, j_reg_1381, "j_reg_1381");
    sc_trace(mVcdFile, zext_ln80_fu_771_p1, "zext_ln80_fu_771_p1");
    sc_trace(mVcdFile, zext_ln80_reg_1386, "zext_ln80_reg_1386");
    sc_trace(mVcdFile, icmp_ln79_fu_759_p2, "icmp_ln79_fu_759_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln81_fu_776_p2, "icmp_ln81_fu_776_p2");
    sc_trace(mVcdFile, bitcast_ln85_fu_802_p1, "bitcast_ln85_fu_802_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, add_ln81_fu_833_p2, "add_ln81_fu_833_p2");
    sc_trace(mVcdFile, add_ln81_reg_1429, "add_ln81_reg_1429");
    sc_trace(mVcdFile, bitcast_ln85_1_fu_839_p1, "bitcast_ln85_1_fu_839_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_2_fu_901_p2, "j_2_fu_901_p2");
    sc_trace(mVcdFile, j_2_reg_1442, "j_2_reg_1442");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, zext_ln97_fu_907_p1, "zext_ln97_fu_907_p1");
    sc_trace(mVcdFile, zext_ln97_reg_1447, "zext_ln97_reg_1447");
    sc_trace(mVcdFile, icmp_ln96_fu_895_p2, "icmp_ln96_fu_895_p2");
    sc_trace(mVcdFile, sub_ln100_fu_936_p2, "sub_ln100_fu_936_p2");
    sc_trace(mVcdFile, sub_ln100_reg_1481, "sub_ln100_reg_1481");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, icmp_ln98_fu_942_p2, "icmp_ln98_fu_942_p2");
    sc_trace(mVcdFile, add_ln98_fu_992_p2, "add_ln98_fu_992_p2");
    sc_trace(mVcdFile, add_ln98_reg_1515, "add_ln98_reg_1515");
    sc_trace(mVcdFile, j_1_fu_1055_p2, "j_1_fu_1055_p2");
    sc_trace(mVcdFile, j_1_reg_1523, "j_1_reg_1523");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, sub_ln127_fu_1081_p2, "sub_ln127_fu_1081_p2");
    sc_trace(mVcdFile, sub_ln127_reg_1528, "sub_ln127_reg_1528");
    sc_trace(mVcdFile, icmp_ln123_fu_1049_p2, "icmp_ln123_fu_1049_p2");
    sc_trace(mVcdFile, trunc_ln124_fu_1087_p1, "trunc_ln124_fu_1087_p1");
    sc_trace(mVcdFile, trunc_ln124_reg_1534, "trunc_ln124_reg_1534");
    sc_trace(mVcdFile, activation_2_fu_1091_p6, "activation_2_fu_1091_p6");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, icmp_ln125_fu_1121_p2, "icmp_ln125_fu_1121_p2");
    sc_trace(mVcdFile, add_ln125_fu_1191_p2, "add_ln125_fu_1191_p2");
    sc_trace(mVcdFile, add_ln125_reg_1594, "add_ln125_reg_1594");
    sc_trace(mVcdFile, i_2_fu_1203_p2, "i_2_fu_1203_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, i_3_fu_1269_p2, "i_3_fu_1269_p2");
    sc_trace(mVcdFile, i_3_reg_1613, "i_3_reg_1613");
    sc_trace(mVcdFile, regslice_both_M_AXIS_V_data_U_apdone_blk, "regslice_both_M_AXIS_V_data_U_apdone_blk");
    sc_trace(mVcdFile, ap_block_state51_io, "ap_block_state51_io");
    sc_trace(mVcdFile, write_output_data_fu_1291_p6, "write_output_data_fu_1291_p6");
    sc_trace(mVcdFile, training_input_address0, "training_input_address0");
    sc_trace(mVcdFile, training_input_ce0, "training_input_ce0");
    sc_trace(mVcdFile, training_input_we0, "training_input_we0");
    sc_trace(mVcdFile, hidden1Layer_address0, "hidden1Layer_address0");
    sc_trace(mVcdFile, hidden1Layer_ce0, "hidden1Layer_ce0");
    sc_trace(mVcdFile, hidden1Layer_we0, "hidden1Layer_we0");
    sc_trace(mVcdFile, hidden1Layer_d0, "hidden1Layer_d0");
    sc_trace(mVcdFile, hidden2Layer_address0, "hidden2Layer_address0");
    sc_trace(mVcdFile, hidden2Layer_ce0, "hidden2Layer_ce0");
    sc_trace(mVcdFile, hidden2Layer_we0, "hidden2Layer_we0");
    sc_trace(mVcdFile, hidden2Layer_d0, "hidden2Layer_d0");
    sc_trace(mVcdFile, phi_ln57_reg_377, "phi_ln57_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln57_fu_705_p2, "icmp_ln57_fu_705_p2");
    sc_trace(mVcdFile, i_0_reg_388, "i_0_reg_388");
    sc_trace(mVcdFile, j_0_reg_399, "j_0_reg_399");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, phi_mul_reg_410, "phi_mul_reg_410");
    sc_trace(mVcdFile, activation_0_0_reg_422, "activation_0_0_reg_422");
    sc_trace(mVcdFile, k_0_0_reg_432, "k_0_0_reg_432");
    sc_trace(mVcdFile, j1_0_reg_444, "j1_0_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, activation2_0_0_reg_456, "activation2_0_0_reg_456");
    sc_trace(mVcdFile, k3_0_0_reg_466, "k3_0_0_reg_466");
    sc_trace(mVcdFile, j4_0_reg_478, "j4_0_reg_478");
    sc_trace(mVcdFile, outputLayer_0_reg_489, "outputLayer_0_reg_489");
    sc_trace(mVcdFile, k6_0_0_reg_499, "k6_0_0_reg_499");
    sc_trace(mVcdFile, i7_0_reg_511, "i7_0_reg_511");
    sc_trace(mVcdFile, icmp_ln132_fu_1197_p2, "icmp_ln132_fu_1197_p2");
    sc_trace(mVcdFile, i8_0_reg_522, "i8_0_reg_522");
    sc_trace(mVcdFile, zext_ln62_fu_748_p1, "zext_ln62_fu_748_p1");
    sc_trace(mVcdFile, zext_ln85_1_fu_797_p1, "zext_ln85_1_fu_797_p1");
    sc_trace(mVcdFile, zext_ln84_fu_782_p1, "zext_ln84_fu_782_p1");
    sc_trace(mVcdFile, zext_ln85_3_fu_828_p1, "zext_ln85_3_fu_828_p1");
    sc_trace(mVcdFile, zext_ln84_1_fu_813_p1, "zext_ln84_1_fu_813_p1");
    sc_trace(mVcdFile, sext_ln100_fu_962_p1, "sext_ln100_fu_962_p1");
    sc_trace(mVcdFile, zext_ln100_fu_948_p1, "zext_ln100_fu_948_p1");
    sc_trace(mVcdFile, sext_ln100_1_fu_987_p1, "sext_ln100_1_fu_987_p1");
    sc_trace(mVcdFile, zext_ln100_1_fu_973_p1, "zext_ln100_1_fu_973_p1");
    sc_trace(mVcdFile, sext_ln127_fu_1141_p1, "sext_ln127_fu_1141_p1");
    sc_trace(mVcdFile, zext_ln127_fu_1127_p1, "zext_ln127_fu_1127_p1");
    sc_trace(mVcdFile, sext_ln127_1_fu_1186_p1, "sext_ln127_1_fu_1186_p1");
    sc_trace(mVcdFile, zext_ln127_1_fu_1172_p1, "zext_ln127_1_fu_1172_p1");
    sc_trace(mVcdFile, output_0_0_fu_132, "output_0_0_fu_132");
    sc_trace(mVcdFile, output_1_0_fu_136, "output_1_0_fu_136");
    sc_trace(mVcdFile, output_2_0_fu_140, "output_2_0_fu_140");
    sc_trace(mVcdFile, output_3_0_fu_144, "output_3_0_fu_144");
    sc_trace(mVcdFile, outputLayer_3_fu_160, "outputLayer_3_fu_160");
    sc_trace(mVcdFile, outputLayer_3_1_fu_164, "outputLayer_3_1_fu_164");
    sc_trace(mVcdFile, outputLayer_3_2_fu_168, "outputLayer_3_2_fu_168");
    sc_trace(mVcdFile, outputLayer_3_3_fu_172, "outputLayer_3_3_fu_172");
    sc_trace(mVcdFile, output_3_fu_176, "output_3_fu_176");
    sc_trace(mVcdFile, output_0_fu_1239_p1, "output_0_fu_1239_p1");
    sc_trace(mVcdFile, trunc_ln134_fu_1221_p1, "trunc_ln134_fu_1221_p1");
    sc_trace(mVcdFile, output_3_1_fu_180, "output_3_1_fu_180");
    sc_trace(mVcdFile, output_3_3_fu_184, "output_3_3_fu_184");
    sc_trace(mVcdFile, output_3_2_fu_188, "output_3_2_fu_188");
    sc_trace(mVcdFile, grp_fu_533_p0, "grp_fu_533_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, grp_fu_540_p0, "grp_fu_540_p0");
    sc_trace(mVcdFile, grp_fu_540_p1, "grp_fu_540_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_544_p0, "grp_fu_544_p0");
    sc_trace(mVcdFile, icmp_ln57_1_fu_615_p2, "icmp_ln57_1_fu_615_p2");
    sc_trace(mVcdFile, icmp_ln57_2_fu_629_p2, "icmp_ln57_2_fu_629_p2");
    sc_trace(mVcdFile, select_ln57_fu_621_p3, "select_ln57_fu_621_p3");
    sc_trace(mVcdFile, icmp_ln57_3_fu_643_p2, "icmp_ln57_3_fu_643_p2");
    sc_trace(mVcdFile, select_ln57_1_fu_635_p3, "select_ln57_1_fu_635_p3");
    sc_trace(mVcdFile, select_ln57_3_fu_657_p3, "select_ln57_3_fu_657_p3");
    sc_trace(mVcdFile, select_ln57_4_fu_665_p3, "select_ln57_4_fu_665_p3");
    sc_trace(mVcdFile, select_ln57_6_fu_681_p3, "select_ln57_6_fu_681_p3");
    sc_trace(mVcdFile, zext_ln85_fu_787_p1, "zext_ln85_fu_787_p1");
    sc_trace(mVcdFile, add_ln85_fu_791_p2, "add_ln85_fu_791_p2");
    sc_trace(mVcdFile, or_ln81_fu_807_p2, "or_ln81_fu_807_p2");
    sc_trace(mVcdFile, zext_ln85_2_fu_818_p1, "zext_ln85_2_fu_818_p1");
    sc_trace(mVcdFile, add_ln85_1_fu_822_p2, "add_ln85_1_fu_822_p2");
    sc_trace(mVcdFile, bitcast_ln88_fu_844_p1, "bitcast_ln88_fu_844_p1");
    sc_trace(mVcdFile, tmp_fu_848_p4, "tmp_fu_848_p4");
    sc_trace(mVcdFile, trunc_ln88_fu_858_p1, "trunc_ln88_fu_858_p1");
    sc_trace(mVcdFile, icmp_ln88_1_fu_868_p2, "icmp_ln88_1_fu_868_p2");
    sc_trace(mVcdFile, icmp_ln88_fu_862_p2, "icmp_ln88_fu_862_p2");
    sc_trace(mVcdFile, or_ln88_fu_874_p2, "or_ln88_fu_874_p2");
    sc_trace(mVcdFile, grp_fu_544_p2, "grp_fu_544_p2");
    sc_trace(mVcdFile, and_ln88_fu_880_p2, "and_ln88_fu_880_p2");
    sc_trace(mVcdFile, tmp_3_fu_912_p3, "tmp_3_fu_912_p3");
    sc_trace(mVcdFile, tmp_9_fu_924_p3, "tmp_9_fu_924_p3");
    sc_trace(mVcdFile, zext_ln100_2_fu_920_p1, "zext_ln100_2_fu_920_p1");
    sc_trace(mVcdFile, zext_ln100_3_fu_932_p1, "zext_ln100_3_fu_932_p1");
    sc_trace(mVcdFile, zext_ln100_4_fu_953_p1, "zext_ln100_4_fu_953_p1");
    sc_trace(mVcdFile, add_ln100_fu_957_p2, "add_ln100_fu_957_p2");
    sc_trace(mVcdFile, or_ln98_fu_967_p2, "or_ln98_fu_967_p2");
    sc_trace(mVcdFile, zext_ln100_5_fu_978_p1, "zext_ln100_5_fu_978_p1");
    sc_trace(mVcdFile, add_ln100_1_fu_982_p2, "add_ln100_1_fu_982_p2");
    sc_trace(mVcdFile, bitcast_ln102_fu_998_p1, "bitcast_ln102_fu_998_p1");
    sc_trace(mVcdFile, tmp_4_fu_1002_p4, "tmp_4_fu_1002_p4");
    sc_trace(mVcdFile, trunc_ln102_fu_1012_p1, "trunc_ln102_fu_1012_p1");
    sc_trace(mVcdFile, icmp_ln102_1_fu_1022_p2, "icmp_ln102_1_fu_1022_p2");
    sc_trace(mVcdFile, icmp_ln102_fu_1016_p2, "icmp_ln102_fu_1016_p2");
    sc_trace(mVcdFile, or_ln102_fu_1028_p2, "or_ln102_fu_1028_p2");
    sc_trace(mVcdFile, and_ln102_fu_1034_p2, "and_ln102_fu_1034_p2");
    sc_trace(mVcdFile, tmp_10_fu_1069_p3, "tmp_10_fu_1069_p3");
    sc_trace(mVcdFile, tmp_s_fu_1061_p3, "tmp_s_fu_1061_p3");
    sc_trace(mVcdFile, zext_ln127_2_fu_1077_p1, "zext_ln127_2_fu_1077_p1");
    sc_trace(mVcdFile, activation_2_fu_1091_p5, "activation_2_fu_1091_p5");
    sc_trace(mVcdFile, zext_ln127_3_fu_1132_p1, "zext_ln127_3_fu_1132_p1");
    sc_trace(mVcdFile, add_ln127_fu_1136_p2, "add_ln127_fu_1136_p2");
    sc_trace(mVcdFile, or_ln125_fu_1166_p2, "or_ln125_fu_1166_p2");
    sc_trace(mVcdFile, zext_ln127_4_fu_1177_p1, "zext_ln127_4_fu_1177_p1");
    sc_trace(mVcdFile, add_ln127_1_fu_1181_p2, "add_ln127_1_fu_1181_p2");
    sc_trace(mVcdFile, tmp_8_fu_1225_p5, "tmp_8_fu_1225_p5");
    sc_trace(mVcdFile, tmp_8_fu_1225_p6, "tmp_8_fu_1225_p6");
    sc_trace(mVcdFile, write_output_data_fu_1291_p5, "write_output_data_fu_1291_p5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_S_AXIS_V_data_U_apdone_blk, "regslice_both_S_AXIS_V_data_U_apdone_blk");
    sc_trace(mVcdFile, S_AXIS_TDATA_int, "S_AXIS_TDATA_int");
    sc_trace(mVcdFile, S_AXIS_TVALID_int, "S_AXIS_TVALID_int");
    sc_trace(mVcdFile, S_AXIS_TREADY_int, "S_AXIS_TREADY_int");
    sc_trace(mVcdFile, regslice_both_S_AXIS_V_data_U_ack_in, "regslice_both_S_AXIS_V_data_U_ack_in");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_apdone_blk, "regslice_both_w1_S_AXIS_V_last_U_apdone_blk");
    sc_trace(mVcdFile, S_AXIS_TLAST_int, "S_AXIS_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_vld_out, "regslice_both_w1_S_AXIS_V_last_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_S_AXIS_V_last_U_ack_in, "regslice_both_w1_S_AXIS_V_last_U_ack_in");
    sc_trace(mVcdFile, M_AXIS_TVALID_int, "M_AXIS_TVALID_int");
    sc_trace(mVcdFile, M_AXIS_TREADY_int, "M_AXIS_TREADY_int");
    sc_trace(mVcdFile, regslice_both_M_AXIS_V_data_U_vld_out, "regslice_both_M_AXIS_V_data_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_apdone_blk, "regslice_both_w1_M_AXIS_V_last_U_apdone_blk");
    sc_trace(mVcdFile, M_AXIS_TLAST_int, "M_AXIS_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy, "regslice_both_w1_M_AXIS_V_last_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_w1_M_AXIS_V_last_U_vld_out, "regslice_both_w1_M_AXIS_V_last_U_vld_out");
#endif

    }
    mHdltvinHandle.open("mlp_HLS.hdltvin.dat");
    mHdltvoutHandle.open("mlp_HLS.hdltvout.dat");
}

mlp_HLS::~mlp_HLS() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete layer1Bias_U;
    delete layer1Weight_U;
    delete layer2Bias_U;
    delete layer2Weight_U;
    delete outputWeight_U;
    delete training_input_U;
    delete hidden1Layer_U;
    delete hidden2Layer_U;
    delete mlp_HLS_fadd_32nshbi_U1;
    delete mlp_HLS_fmul_32nsibs_U2;
    delete mlp_HLS_fcmp_32nsjbC_U3;
    delete mlp_HLS_mux_42_32kbM_U4;
    delete mlp_HLS_mux_42_32kbM_U5;
    delete mlp_HLS_mux_42_32kbM_U6;
    delete regslice_both_S_AXIS_V_data_U;
    delete regslice_both_w1_S_AXIS_V_last_U;
    delete regslice_both_M_AXIS_V_data_U;
    delete regslice_both_w1_M_AXIS_V_last_U;
}

void mlp_HLS::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mlp_HLS::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void mlp_HLS::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_3CD1708C;
}

void mlp_HLS::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_3A2F9043;
}

void mlp_HLS::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_BC219C6E;
}

void mlp_HLS::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv32_BCA1D39C;
}

void mlp_HLS::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void mlp_HLS::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        activation2_0_0_reg_456 = grp_fu_533_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        activation2_0_0_reg_456 = layer2Bias_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        activation_0_0_reg_422 = grp_fu_533_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        activation_0_0_reg_422 = layer1Bias_q0.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_1197_p2.read()))) {
        i7_0_reg_511 = i_2_fu_1203_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
        i7_0_reg_511 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_1197_p2.read()))) {
        i8_0_reg_522 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
                esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
        i8_0_reg_522 = i_3_reg_1613.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln57_fu_705_p2.read(), ap_const_lv1_1))) {
        i_0_reg_388 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        i_0_reg_388 = i_fu_737_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln79_fu_759_p2.read(), ap_const_lv1_1))) {
        j1_0_reg_444 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        j1_0_reg_444 = j_2_reg_1442.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1))) {
        j4_0_reg_478 = j_1_reg_1523.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                esl_seteq<1,1,1>(icmp_ln96_fu_895_p2.read(), ap_const_lv1_1))) {
        j4_0_reg_478 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        j_0_reg_399 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        j_0_reg_399 = j_reg_1381.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        k3_0_0_reg_466 = add_ln98_reg_1515.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        k3_0_0_reg_466 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        k6_0_0_reg_499 = add_ln125_reg_1594.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_1049_p2.read()))) {
        k6_0_0_reg_499 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        k_0_0_reg_432 = add_ln81_reg_1429.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_0_reg_432 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        outputLayer_0_reg_489 = grp_fu_533_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_1049_p2.read()))) {
        outputLayer_0_reg_489 = activation_2_fu_1091_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_1197_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_1, trunc_ln134_fu_1221_p1.read()))) {
        output_3_1_fu_180 = output_0_fu_1239_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
        output_3_1_fu_180 = select_ln57_7_reg_1352.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_1197_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_3, trunc_ln134_fu_1221_p1.read()))) {
        output_3_2_fu_188 = output_0_fu_1239_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
        output_3_2_fu_188 = select_ln57_2_reg_1342.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_1197_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_2, trunc_ln134_fu_1221_p1.read()))) {
        output_3_3_fu_184 = output_0_fu_1239_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
        output_3_3_fu_184 = select_ln57_5_reg_1347.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln132_fu_1197_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_0, trunc_ln134_fu_1221_p1.read()))) {
        output_3_fu_176 = output_0_fu_1239_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
        output_3_fu_176 = select_ln57_8_reg_1357.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln57_fu_705_p2.read()))) {
        phi_ln57_reg_377 = add_ln57_fu_609_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        phi_ln57_reg_377 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        phi_mul_reg_410 = ap_const_lv13_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        phi_mul_reg_410 = add_ln79_reg_1373.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        add_ln125_reg_1594 = add_ln125_fu_1191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln79_reg_1373 = add_ln79_fu_753_p2.read();
        j_reg_1381 = j_fu_765_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        add_ln81_reg_1429 = add_ln81_fu_833_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        add_ln98_reg_1515 = add_ln98_fu_992_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_M_AXIS_V_data_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state51_io.read())))) {
        i_3_reg_1613 = i_3_fu_1269_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        j_1_reg_1523 = j_1_fu_1055_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j_2_reg_1442 = j_2_fu_901_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(trunc_ln124_reg_1534.read(), ap_const_lv2_1))) {
        outputLayer_3_1_fu_164 = outputLayer_0_reg_489.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(trunc_ln124_reg_1534.read(), ap_const_lv2_2))) {
        outputLayer_3_2_fu_168 = outputLayer_0_reg_489.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(trunc_ln124_reg_1534.read(), ap_const_lv2_3))) {
        outputLayer_3_3_fu_172 = outputLayer_0_reg_489.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(trunc_ln124_reg_1534.read(), ap_const_lv2_0))) {
        outputLayer_3_fu_160 = outputLayer_0_reg_489.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_0_0_fu_132 = select_ln57_8_fu_697_p3.read();
        output_1_0_fu_136 = select_ln57_7_fu_689_p3.read();
        output_2_0_fu_140 = select_ln57_5_fu_673_p3.read();
        output_3_0_fu_144 = select_ln57_2_fu_649_p3.read();
        select_ln57_2_reg_1342 = select_ln57_2_fu_649_p3.read();
        select_ln57_5_reg_1347 = select_ln57_5_fu_673_p3.read();
        select_ln57_7_reg_1352 = select_ln57_7_fu_689_p3.read();
        select_ln57_8_reg_1357 = select_ln57_8_fu_697_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        reg_551 = training_input_q0.read();
        reg_555 = layer1Weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        reg_560 = grp_fu_540_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        reg_565 = grp_fu_533_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        reg_577 = hidden1Layer_q0.read();
        reg_582 = layer2Weight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        reg_587 = hidden2Layer_q0.read();
        reg_592 = outputWeight_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        sub_ln100_reg_1481 = sub_ln100_fu_936_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_1049_p2.read()))) {
        sub_ln127_reg_1528 = sub_ln127_fu_1081_p2.read();
        trunc_ln124_reg_1534 = trunc_ln124_fu_1087_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln79_fu_759_p2.read()))) {
        zext_ln80_reg_1386 = zext_ln80_fu_771_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln96_fu_895_p2.read()))) {
        zext_ln97_reg_1447 = zext_ln97_fu_907_p1.read();
    }
}

void mlp_HLS::thread_M_AXIS_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln138_fu_1263_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        M_AXIS_TDATA_blk_n = M_AXIS_TREADY_int.read();
    } else {
        M_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp_HLS::thread_M_AXIS_TLAST_int() {
    M_AXIS_TLAST_int =  (sc_logic) ((!i8_0_reg_522.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(i8_0_reg_522.read() == ap_const_lv3_3))[0];
}

void mlp_HLS::thread_M_AXIS_TVALID() {
    M_AXIS_TVALID = regslice_both_M_AXIS_V_data_U_vld_out.read();
}

void mlp_HLS::thread_M_AXIS_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln138_fu_1263_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_M_AXIS_V_data_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state51_io.read())))) {
        M_AXIS_TVALID_int = ap_const_logic_1;
    } else {
        M_AXIS_TVALID_int = ap_const_logic_0;
    }
}

void mlp_HLS::thread_S_AXIS_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0))) {
        S_AXIS_TDATA_blk_n = S_AXIS_TVALID_int.read();
    } else {
        S_AXIS_TDATA_blk_n = ap_const_logic_1;
    }
}

void mlp_HLS::thread_S_AXIS_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, S_AXIS_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_S_AXIS_V_data_U_ack_in.read()))) {
        S_AXIS_TREADY = ap_const_logic_1;
    } else {
        S_AXIS_TREADY = ap_const_logic_0;
    }
}

void mlp_HLS::thread_S_AXIS_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        S_AXIS_TREADY_int = ap_const_logic_1;
    } else {
        S_AXIS_TREADY_int = ap_const_logic_0;
    }
}

void mlp_HLS::thread_activation_2_fu_1091_p5() {
    activation_2_fu_1091_p5 = j4_0_reg_478.read().range(2-1, 0);
}

void mlp_HLS::thread_add_ln100_1_fu_982_p2() {
    add_ln100_1_fu_982_p2 = (!sub_ln100_reg_1481.read().is_01() || !zext_ln100_5_fu_978_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln100_reg_1481.read()) + sc_biguint<15>(zext_ln100_5_fu_978_p1.read()));
}

void mlp_HLS::thread_add_ln100_fu_957_p2() {
    add_ln100_fu_957_p2 = (!sub_ln100_reg_1481.read().is_01() || !zext_ln100_4_fu_953_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln100_reg_1481.read()) + sc_biguint<15>(zext_ln100_4_fu_953_p1.read()));
}

void mlp_HLS::thread_add_ln125_fu_1191_p2() {
    add_ln125_fu_1191_p2 = (!k6_0_0_reg_499.read().is_01() || !ap_const_lv7_2.is_01())? sc_lv<7>(): (sc_biguint<7>(k6_0_0_reg_499.read()) + sc_biguint<7>(ap_const_lv7_2));
}

void mlp_HLS::thread_add_ln127_1_fu_1181_p2() {
    add_ln127_1_fu_1181_p2 = (!sub_ln127_reg_1528.read().is_01() || !zext_ln127_4_fu_1177_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sub_ln127_reg_1528.read()) + sc_biguint<10>(zext_ln127_4_fu_1177_p1.read()));
}

void mlp_HLS::thread_add_ln127_fu_1136_p2() {
    add_ln127_fu_1136_p2 = (!sub_ln127_reg_1528.read().is_01() || !zext_ln127_3_fu_1132_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(sub_ln127_reg_1528.read()) + sc_biguint<10>(zext_ln127_3_fu_1132_p1.read()));
}

void mlp_HLS::thread_add_ln57_fu_609_p2() {
    add_ln57_fu_609_p2 = (!phi_ln57_reg_377.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(phi_ln57_reg_377.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void mlp_HLS::thread_add_ln79_fu_753_p2() {
    add_ln79_fu_753_p2 = (!phi_mul_reg_410.read().is_01() || !ap_const_lv13_36.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_410.read()) + sc_biguint<13>(ap_const_lv13_36));
}

void mlp_HLS::thread_add_ln81_fu_833_p2() {
    add_ln81_fu_833_p2 = (!k_0_0_reg_432.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_biguint<6>(k_0_0_reg_432.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void mlp_HLS::thread_add_ln85_1_fu_822_p2() {
    add_ln85_1_fu_822_p2 = (!phi_mul_reg_410.read().is_01() || !zext_ln85_2_fu_818_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_410.read()) + sc_biguint<13>(zext_ln85_2_fu_818_p1.read()));
}

void mlp_HLS::thread_add_ln85_fu_791_p2() {
    add_ln85_fu_791_p2 = (!phi_mul_reg_410.read().is_01() || !zext_ln85_fu_787_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul_reg_410.read()) + sc_biguint<13>(zext_ln85_fu_787_p1.read()));
}

void mlp_HLS::thread_add_ln98_fu_992_p2() {
    add_ln98_fu_992_p2 = (!k3_0_0_reg_466.read().is_01() || !ap_const_lv7_2.is_01())? sc_lv<7>(): (sc_biguint<7>(k3_0_0_reg_466.read()) + sc_biguint<7>(ap_const_lv7_2));
}

void mlp_HLS::thread_and_ln102_fu_1034_p2() {
    and_ln102_fu_1034_p2 = (or_ln102_fu_1028_p2.read() & grp_fu_544_p2.read());
}

void mlp_HLS::thread_and_ln88_fu_880_p2() {
    and_ln88_fu_880_p2 = (or_ln88_fu_874_p2.read() & grp_fu_544_p2.read());
}

void mlp_HLS::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mlp_HLS::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void mlp_HLS::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mlp_HLS::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void mlp_HLS::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void mlp_HLS::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void mlp_HLS::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void mlp_HLS::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void mlp_HLS::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mlp_HLS::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void mlp_HLS::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void mlp_HLS::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void mlp_HLS::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void mlp_HLS::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void mlp_HLS::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void mlp_HLS::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void mlp_HLS::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void mlp_HLS::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mlp_HLS::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void mlp_HLS::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void mlp_HLS::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void mlp_HLS::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void mlp_HLS::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void mlp_HLS::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void mlp_HLS::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void mlp_HLS::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void mlp_HLS::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mlp_HLS::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void mlp_HLS::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void mlp_HLS::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void mlp_HLS::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void mlp_HLS::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void mlp_HLS::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void mlp_HLS::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mlp_HLS::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void mlp_HLS::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void mlp_HLS::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void mlp_HLS::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mlp_HLS::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mlp_HLS::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mlp_HLS::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read()));
}

void mlp_HLS::thread_ap_block_state51_io() {
    ap_block_state51_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln138_fu_1263_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, M_AXIS_TREADY_int.read()));
}

void mlp_HLS::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mlp_HLS::thread_bitcast_ln102_fu_998_p1() {
    bitcast_ln102_fu_998_p1 = activation2_0_0_reg_456.read();
}

void mlp_HLS::thread_bitcast_ln85_1_fu_839_p1() {
    bitcast_ln85_1_fu_839_p1 = reg_551.read();
}

void mlp_HLS::thread_bitcast_ln85_fu_802_p1() {
    bitcast_ln85_fu_802_p1 = reg_551.read();
}

void mlp_HLS::thread_bitcast_ln88_fu_844_p1() {
    bitcast_ln88_fu_844_p1 = activation_0_0_reg_422.read();
}

void mlp_HLS::thread_grp_fu_533_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_533_p0 = outputLayer_0_reg_489.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_533_p0 = activation2_0_0_reg_456.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        grp_fu_533_p0 = reg_565.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_533_p0 = activation_0_0_reg_422.read();
    } else {
        grp_fu_533_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mlp_HLS::thread_grp_fu_540_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_540_p0 = reg_587.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_540_p0 = reg_577.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_540_p0 = bitcast_ln85_1_fu_839_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_540_p0 = bitcast_ln85_fu_802_p1.read();
    } else {
        grp_fu_540_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mlp_HLS::thread_grp_fu_540_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_540_p1 = reg_592.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_540_p1 = reg_582.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        grp_fu_540_p1 = reg_555.read();
    } else {
        grp_fu_540_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mlp_HLS::thread_grp_fu_544_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_544_p0 = activation2_0_0_reg_456.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_544_p0 = activation_0_0_reg_422.read();
    } else {
        grp_fu_544_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mlp_HLS::thread_hidden1Layer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        hidden1Layer_address0 =  (sc_lv<7>) (zext_ln100_1_fu_973_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        hidden1Layer_address0 =  (sc_lv<7>) (zext_ln100_fu_948_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        hidden1Layer_address0 =  (sc_lv<7>) (zext_ln80_reg_1386.read());
    } else {
        hidden1Layer_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void mlp_HLS::thread_hidden1Layer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        hidden1Layer_ce0 = ap_const_logic_1;
    } else {
        hidden1Layer_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_hidden1Layer_d0() {
    hidden1Layer_d0 = (!and_ln88_fu_880_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln88_fu_880_p2.read()[0].to_bool())? ap_const_lv32_0: activation_0_0_reg_422.read());
}

void mlp_HLS::thread_hidden1Layer_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        hidden1Layer_we0 = ap_const_logic_1;
    } else {
        hidden1Layer_we0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_hidden2Layer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        hidden2Layer_address0 =  (sc_lv<7>) (zext_ln127_1_fu_1172_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        hidden2Layer_address0 =  (sc_lv<7>) (zext_ln127_fu_1127_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        hidden2Layer_address0 =  (sc_lv<7>) (zext_ln97_reg_1447.read());
    } else {
        hidden2Layer_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void mlp_HLS::thread_hidden2Layer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        hidden2Layer_ce0 = ap_const_logic_1;
    } else {
        hidden2Layer_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_hidden2Layer_d0() {
    hidden2Layer_d0 = (!and_ln102_fu_1034_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln102_fu_1034_p2.read()[0].to_bool())? ap_const_lv32_0: activation2_0_0_reg_456.read());
}

void mlp_HLS::thread_hidden2Layer_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        hidden2Layer_we0 = ap_const_logic_1;
    } else {
        hidden2Layer_we0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_i_2_fu_1203_p2() {
    i_2_fu_1203_p2 = (!i7_0_reg_511.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i7_0_reg_511.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp_HLS::thread_i_3_fu_1269_p2() {
    i_3_fu_1269_p2 = (!i8_0_reg_522.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i8_0_reg_522.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp_HLS::thread_i_fu_737_p2() {
    i_fu_737_p2 = (!i_0_reg_388.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_388.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mlp_HLS::thread_icmp_ln102_1_fu_1022_p2() {
    icmp_ln102_1_fu_1022_p2 = (!trunc_ln102_fu_1012_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln102_fu_1012_p1.read() == ap_const_lv23_0);
}

void mlp_HLS::thread_icmp_ln102_fu_1016_p2() {
    icmp_ln102_fu_1016_p2 = (!tmp_4_fu_1002_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_1002_p4.read() != ap_const_lv8_FF);
}

void mlp_HLS::thread_icmp_ln123_fu_1049_p2() {
    icmp_ln123_fu_1049_p2 = (!j4_0_reg_478.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j4_0_reg_478.read() == ap_const_lv3_4);
}

void mlp_HLS::thread_icmp_ln125_fu_1121_p2() {
    icmp_ln125_fu_1121_p2 = (!k6_0_0_reg_499.read().is_01() || !ap_const_lv7_70.is_01())? sc_lv<1>(): sc_lv<1>(k6_0_0_reg_499.read() == ap_const_lv7_70);
}

void mlp_HLS::thread_icmp_ln132_fu_1197_p2() {
    icmp_ln132_fu_1197_p2 = (!i7_0_reg_511.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i7_0_reg_511.read() == ap_const_lv3_4);
}

void mlp_HLS::thread_icmp_ln138_fu_1263_p2() {
    icmp_ln138_fu_1263_p2 = (!i8_0_reg_522.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i8_0_reg_522.read() == ap_const_lv3_4);
}

void mlp_HLS::thread_icmp_ln57_1_fu_615_p2() {
    icmp_ln57_1_fu_615_p2 = (!phi_ln57_reg_377.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln57_reg_377.read() == ap_const_lv2_2);
}

void mlp_HLS::thread_icmp_ln57_2_fu_629_p2() {
    icmp_ln57_2_fu_629_p2 = (!phi_ln57_reg_377.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln57_reg_377.read() == ap_const_lv2_1);
}

void mlp_HLS::thread_icmp_ln57_3_fu_643_p2() {
    icmp_ln57_3_fu_643_p2 = (!phi_ln57_reg_377.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln57_reg_377.read() == ap_const_lv2_0);
}

void mlp_HLS::thread_icmp_ln57_fu_705_p2() {
    icmp_ln57_fu_705_p2 = (!phi_ln57_reg_377.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln57_reg_377.read() == ap_const_lv2_3);
}

void mlp_HLS::thread_icmp_ln60_fu_731_p2() {
    icmp_ln60_fu_731_p2 = (!i_0_reg_388.read().is_01() || !ap_const_lv6_36.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_388.read() == ap_const_lv6_36);
}

void mlp_HLS::thread_icmp_ln79_fu_759_p2() {
    icmp_ln79_fu_759_p2 = (!j_0_reg_399.read().is_01() || !ap_const_lv7_70.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_399.read() == ap_const_lv7_70);
}

void mlp_HLS::thread_icmp_ln81_fu_776_p2() {
    icmp_ln81_fu_776_p2 = (!k_0_0_reg_432.read().is_01() || !ap_const_lv6_36.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_432.read() == ap_const_lv6_36);
}

void mlp_HLS::thread_icmp_ln88_1_fu_868_p2() {
    icmp_ln88_1_fu_868_p2 = (!trunc_ln88_fu_858_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln88_fu_858_p1.read() == ap_const_lv23_0);
}

void mlp_HLS::thread_icmp_ln88_fu_862_p2() {
    icmp_ln88_fu_862_p2 = (!tmp_fu_848_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_848_p4.read() != ap_const_lv8_FF);
}

void mlp_HLS::thread_icmp_ln96_fu_895_p2() {
    icmp_ln96_fu_895_p2 = (!j1_0_reg_444.read().is_01() || !ap_const_lv7_70.is_01())? sc_lv<1>(): sc_lv<1>(j1_0_reg_444.read() == ap_const_lv7_70);
}

void mlp_HLS::thread_icmp_ln98_fu_942_p2() {
    icmp_ln98_fu_942_p2 = (!k3_0_0_reg_466.read().is_01() || !ap_const_lv7_70.is_01())? sc_lv<1>(): sc_lv<1>(k3_0_0_reg_466.read() == ap_const_lv7_70);
}

void mlp_HLS::thread_j_1_fu_1055_p2() {
    j_1_fu_1055_p2 = (!j4_0_reg_478.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j4_0_reg_478.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mlp_HLS::thread_j_2_fu_901_p2() {
    j_2_fu_901_p2 = (!j1_0_reg_444.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j1_0_reg_444.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp_HLS::thread_j_fu_765_p2() {
    j_fu_765_p2 = (!j_0_reg_399.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_399.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mlp_HLS::thread_layer1Bias_address0() {
    layer1Bias_address0 =  (sc_lv<7>) (zext_ln80_fu_771_p1.read());
}

void mlp_HLS::thread_layer1Bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        layer1Bias_ce0 = ap_const_logic_1;
    } else {
        layer1Bias_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_layer1Weight_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        layer1Weight_address0 =  (sc_lv<13>) (zext_ln85_3_fu_828_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        layer1Weight_address0 =  (sc_lv<13>) (zext_ln85_1_fu_797_p1.read());
    } else {
        layer1Weight_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void mlp_HLS::thread_layer1Weight_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        layer1Weight_ce0 = ap_const_logic_1;
    } else {
        layer1Weight_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_layer2Bias_address0() {
    layer2Bias_address0 =  (sc_lv<7>) (zext_ln97_fu_907_p1.read());
}

void mlp_HLS::thread_layer2Bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        layer2Bias_ce0 = ap_const_logic_1;
    } else {
        layer2Bias_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_layer2Weight_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        layer2Weight_address0 =  (sc_lv<14>) (sext_ln100_1_fu_987_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        layer2Weight_address0 =  (sc_lv<14>) (sext_ln100_fu_962_p1.read());
    } else {
        layer2Weight_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void mlp_HLS::thread_layer2Weight_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        layer2Weight_ce0 = ap_const_logic_1;
    } else {
        layer2Weight_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_or_ln102_fu_1028_p2() {
    or_ln102_fu_1028_p2 = (icmp_ln102_1_fu_1022_p2.read() | icmp_ln102_fu_1016_p2.read());
}

void mlp_HLS::thread_or_ln125_fu_1166_p2() {
    or_ln125_fu_1166_p2 = (k6_0_0_reg_499.read() | ap_const_lv7_1);
}

void mlp_HLS::thread_or_ln81_fu_807_p2() {
    or_ln81_fu_807_p2 = (k_0_0_reg_432.read() | ap_const_lv6_1);
}

void mlp_HLS::thread_or_ln88_fu_874_p2() {
    or_ln88_fu_874_p2 = (icmp_ln88_1_fu_868_p2.read() | icmp_ln88_fu_862_p2.read());
}

void mlp_HLS::thread_or_ln98_fu_967_p2() {
    or_ln98_fu_967_p2 = (k3_0_0_reg_466.read() | ap_const_lv7_1);
}

void mlp_HLS::thread_outputWeight_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        outputWeight_address0 =  (sc_lv<9>) (sext_ln127_1_fu_1186_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        outputWeight_address0 =  (sc_lv<9>) (sext_ln127_fu_1141_p1.read());
    } else {
        outputWeight_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void mlp_HLS::thread_outputWeight_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        outputWeight_ce0 = ap_const_logic_1;
    } else {
        outputWeight_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_output_0_fu_1239_p1() {
    output_0_fu_1239_p1 = tmp_8_fu_1225_p6.read();
}

void mlp_HLS::thread_select_ln57_1_fu_635_p3() {
    select_ln57_1_fu_635_p3 = (!icmp_ln57_2_fu_629_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_2_fu_629_p2.read()[0].to_bool())? output_3_0_fu_144.read(): select_ln57_fu_621_p3.read());
}

void mlp_HLS::thread_select_ln57_2_fu_649_p3() {
    select_ln57_2_fu_649_p3 = (!icmp_ln57_3_fu_643_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_3_fu_643_p2.read()[0].to_bool())? output_3_0_fu_144.read(): select_ln57_1_fu_635_p3.read());
}

void mlp_HLS::thread_select_ln57_3_fu_657_p3() {
    select_ln57_3_fu_657_p3 = (!icmp_ln57_1_fu_615_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_1_fu_615_p2.read()[0].to_bool())? ap_const_lv32_0: output_2_0_fu_140.read());
}

void mlp_HLS::thread_select_ln57_4_fu_665_p3() {
    select_ln57_4_fu_665_p3 = (!icmp_ln57_2_fu_629_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_2_fu_629_p2.read()[0].to_bool())? output_2_0_fu_140.read(): select_ln57_3_fu_657_p3.read());
}

void mlp_HLS::thread_select_ln57_5_fu_673_p3() {
    select_ln57_5_fu_673_p3 = (!icmp_ln57_3_fu_643_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_3_fu_643_p2.read()[0].to_bool())? output_2_0_fu_140.read(): select_ln57_4_fu_665_p3.read());
}

void mlp_HLS::thread_select_ln57_6_fu_681_p3() {
    select_ln57_6_fu_681_p3 = (!icmp_ln57_2_fu_629_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_2_fu_629_p2.read()[0].to_bool())? ap_const_lv32_0: output_1_0_fu_136.read());
}

void mlp_HLS::thread_select_ln57_7_fu_689_p3() {
    select_ln57_7_fu_689_p3 = (!icmp_ln57_3_fu_643_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_3_fu_643_p2.read()[0].to_bool())? output_1_0_fu_136.read(): select_ln57_6_fu_681_p3.read());
}

void mlp_HLS::thread_select_ln57_8_fu_697_p3() {
    select_ln57_8_fu_697_p3 = (!icmp_ln57_3_fu_643_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_3_fu_643_p2.read()[0].to_bool())? ap_const_lv32_0: output_0_0_fu_132.read());
}

void mlp_HLS::thread_select_ln57_fu_621_p3() {
    select_ln57_fu_621_p3 = (!icmp_ln57_1_fu_615_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_1_fu_615_p2.read()[0].to_bool())? output_3_0_fu_144.read(): ap_const_lv32_0);
}

void mlp_HLS::thread_sext_ln100_1_fu_987_p1() {
    sext_ln100_1_fu_987_p1 = esl_sext<64,15>(add_ln100_1_fu_982_p2.read());
}

void mlp_HLS::thread_sext_ln100_fu_962_p1() {
    sext_ln100_fu_962_p1 = esl_sext<64,15>(add_ln100_fu_957_p2.read());
}

void mlp_HLS::thread_sext_ln127_1_fu_1186_p1() {
    sext_ln127_1_fu_1186_p1 = esl_sext<64,10>(add_ln127_1_fu_1181_p2.read());
}

void mlp_HLS::thread_sext_ln127_fu_1141_p1() {
    sext_ln127_fu_1141_p1 = esl_sext<64,10>(add_ln127_fu_1136_p2.read());
}

void mlp_HLS::thread_sub_ln100_fu_936_p2() {
    sub_ln100_fu_936_p2 = (!zext_ln100_2_fu_920_p1.read().is_01() || !zext_ln100_3_fu_932_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln100_2_fu_920_p1.read()) - sc_biguint<15>(zext_ln100_3_fu_932_p1.read()));
}

void mlp_HLS::thread_sub_ln127_fu_1081_p2() {
    sub_ln127_fu_1081_p2 = (!tmp_s_fu_1061_p3.read().is_01() || !zext_ln127_2_fu_1077_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_s_fu_1061_p3.read()) - sc_biguint<10>(zext_ln127_2_fu_1077_p1.read()));
}

void mlp_HLS::thread_tmp_10_fu_1069_p3() {
    tmp_10_fu_1069_p3 = esl_concat<3,4>(j4_0_reg_478.read(), ap_const_lv4_0);
}

void mlp_HLS::thread_tmp_3_fu_912_p3() {
    tmp_3_fu_912_p3 = esl_concat<7,7>(j1_0_reg_444.read(), ap_const_lv7_0);
}

void mlp_HLS::thread_tmp_4_fu_1002_p4() {
    tmp_4_fu_1002_p4 = bitcast_ln102_fu_998_p1.read().range(30, 23);
}

void mlp_HLS::thread_tmp_8_fu_1225_p5() {
    tmp_8_fu_1225_p5 = i7_0_reg_511.read().range(2-1, 0);
}

void mlp_HLS::thread_tmp_9_fu_924_p3() {
    tmp_9_fu_924_p3 = esl_concat<7,4>(j1_0_reg_444.read(), ap_const_lv4_0);
}

void mlp_HLS::thread_tmp_fu_848_p4() {
    tmp_fu_848_p4 = bitcast_ln88_fu_844_p1.read().range(30, 23);
}

void mlp_HLS::thread_tmp_s_fu_1061_p3() {
    tmp_s_fu_1061_p3 = esl_concat<3,7>(j4_0_reg_478.read(), ap_const_lv7_0);
}

void mlp_HLS::thread_training_input_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        training_input_address0 =  (sc_lv<6>) (zext_ln84_1_fu_813_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        training_input_address0 =  (sc_lv<6>) (zext_ln84_fu_782_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        training_input_address0 =  (sc_lv<6>) (zext_ln62_fu_748_p1.read());
    } else {
        training_input_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mlp_HLS::thread_training_input_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read()))))) {
        training_input_ce0 = ap_const_logic_1;
    } else {
        training_input_ce0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_training_input_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
        training_input_we0 = ap_const_logic_1;
    } else {
        training_input_we0 = ap_const_logic_0;
    }
}

void mlp_HLS::thread_trunc_ln102_fu_1012_p1() {
    trunc_ln102_fu_1012_p1 = bitcast_ln102_fu_998_p1.read().range(23-1, 0);
}

void mlp_HLS::thread_trunc_ln124_fu_1087_p1() {
    trunc_ln124_fu_1087_p1 = j4_0_reg_478.read().range(2-1, 0);
}

void mlp_HLS::thread_trunc_ln134_fu_1221_p1() {
    trunc_ln134_fu_1221_p1 = i7_0_reg_511.read().range(2-1, 0);
}

void mlp_HLS::thread_trunc_ln88_fu_858_p1() {
    trunc_ln88_fu_858_p1 = bitcast_ln88_fu_844_p1.read().range(23-1, 0);
}

void mlp_HLS::thread_write_output_data_fu_1291_p5() {
    write_output_data_fu_1291_p5 = i8_0_reg_522.read().range(2-1, 0);
}

void mlp_HLS::thread_zext_ln100_1_fu_973_p1() {
    zext_ln100_1_fu_973_p1 = esl_zext<64,7>(or_ln98_fu_967_p2.read());
}

void mlp_HLS::thread_zext_ln100_2_fu_920_p1() {
    zext_ln100_2_fu_920_p1 = esl_zext<15,14>(tmp_3_fu_912_p3.read());
}

void mlp_HLS::thread_zext_ln100_3_fu_932_p1() {
    zext_ln100_3_fu_932_p1 = esl_zext<15,11>(tmp_9_fu_924_p3.read());
}

void mlp_HLS::thread_zext_ln100_4_fu_953_p1() {
    zext_ln100_4_fu_953_p1 = esl_zext<15,7>(k3_0_0_reg_466.read());
}

void mlp_HLS::thread_zext_ln100_5_fu_978_p1() {
    zext_ln100_5_fu_978_p1 = esl_zext<15,7>(or_ln98_fu_967_p2.read());
}

void mlp_HLS::thread_zext_ln100_fu_948_p1() {
    zext_ln100_fu_948_p1 = esl_zext<64,7>(k3_0_0_reg_466.read());
}

void mlp_HLS::thread_zext_ln127_1_fu_1172_p1() {
    zext_ln127_1_fu_1172_p1 = esl_zext<64,7>(or_ln125_fu_1166_p2.read());
}

void mlp_HLS::thread_zext_ln127_2_fu_1077_p1() {
    zext_ln127_2_fu_1077_p1 = esl_zext<10,7>(tmp_10_fu_1069_p3.read());
}

void mlp_HLS::thread_zext_ln127_3_fu_1132_p1() {
    zext_ln127_3_fu_1132_p1 = esl_zext<10,7>(k6_0_0_reg_499.read());
}

void mlp_HLS::thread_zext_ln127_4_fu_1177_p1() {
    zext_ln127_4_fu_1177_p1 = esl_zext<10,7>(or_ln125_fu_1166_p2.read());
}

void mlp_HLS::thread_zext_ln127_fu_1127_p1() {
    zext_ln127_fu_1127_p1 = esl_zext<64,7>(k6_0_0_reg_499.read());
}

void mlp_HLS::thread_zext_ln62_fu_748_p1() {
    zext_ln62_fu_748_p1 = esl_zext<64,6>(i_0_reg_388.read());
}

void mlp_HLS::thread_zext_ln80_fu_771_p1() {
    zext_ln80_fu_771_p1 = esl_zext<64,7>(j_0_reg_399.read());
}

void mlp_HLS::thread_zext_ln84_1_fu_813_p1() {
    zext_ln84_1_fu_813_p1 = esl_zext<64,6>(or_ln81_fu_807_p2.read());
}

void mlp_HLS::thread_zext_ln84_fu_782_p1() {
    zext_ln84_fu_782_p1 = esl_zext<64,6>(k_0_0_reg_432.read());
}

void mlp_HLS::thread_zext_ln85_1_fu_797_p1() {
    zext_ln85_1_fu_797_p1 = esl_zext<64,13>(add_ln85_fu_791_p2.read());
}

void mlp_HLS::thread_zext_ln85_2_fu_818_p1() {
    zext_ln85_2_fu_818_p1 = esl_zext<13,6>(or_ln81_fu_807_p2.read());
}

void mlp_HLS::thread_zext_ln85_3_fu_828_p1() {
    zext_ln85_3_fu_828_p1 = esl_zext<64,13>(add_ln85_1_fu_822_p2.read());
}

void mlp_HLS::thread_zext_ln85_fu_787_p1() {
    zext_ln85_fu_787_p1 = esl_zext<13,6>(k_0_0_reg_432.read());
}

void mlp_HLS::thread_zext_ln97_fu_907_p1() {
    zext_ln97_fu_907_p1 = esl_zext<64,7>(j1_0_reg_444.read());
}

void mlp_HLS::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln57_fu_705_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln60_fu_731_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, S_AXIS_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln79_fu_759_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln81_fu_776_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(icmp_ln96_fu_895_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(icmp_ln98_fu_942_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(icmp_ln123_fu_1049_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state50;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(icmp_ln125_fu_1121_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 562949953421312 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln132_fu_1197_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_M_AXIS_V_data_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state51_io.read())) && esl_seteq<1,1,1>(icmp_ln138_fu_1263_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln138_fu_1263_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_M_AXIS_V_data_U_apdone_blk.read()) || esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state51_io.read())))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        case 2251799813685248 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(M_AXIS_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state52;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<52>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void mlp_HLS::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TDATA\" :  \"" << S_AXIS_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TVALID\" :  \"" << S_AXIS_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"S_AXIS_TREADY\" :  \"" << S_AXIS_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_AXIS_TLAST\" :  \"" << S_AXIS_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TDATA\" :  \"" << M_AXIS_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TVALID\" :  \"" << M_AXIS_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"M_AXIS_TREADY\" :  \"" << M_AXIS_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"M_AXIS_TLAST\" :  \"" << M_AXIS_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

